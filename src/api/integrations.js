// Mock integrations to replace Base44 integrations

// Mock Core integration
export const Core = {
  InvokeLLM: async (params) => {
    console.log('Mock LLM called with:', params);
    
    // Simulate AI response based on the prompt
    if (params.prompt && params.prompt.includes('Generate realistic trade disruption events')) {
      return {
        success: true,
        data: {
          disruptions: [
            {
              title: "New Port Congestion in Singapore",
              description: "Increased vessel traffic causes delays at Port of Singapore",
              start_date: new Date().toISOString().split('T')[0],
              severity: "medium",
              economic_impact: "$500 million",
              confidence_score: 85
            },
            {
              title: "Equipment Failure at Rotterdam",
              description: "Crane malfunction temporarily halts operations",
              start_date: new Date().toISOString().split('T')[0],
              severity: "low",
              economic_impact: "$200 million",
              confidence_score: 90
            }
          ]
        }
      };
    }
    
    return {
      success: true,
      data: {
        response: "This is a mock AI response. In a real implementation, this would be generated by an AI model."
      }
    };
  },
  
  SendEmail: async (params) => {
    console.log('Mock email sent:', params);
    return {
      success: true,
      messageId: `mock_email_${Date.now()}`
    };
  },
  
  UploadFile: async (params) => {
    console.log('Mock file upload:', params);
    return {
      success: true,
      fileId: `mock_file_${Date.now()}`,
      url: 'https://mock-storage.example.com/file.pdf'
    };
  },
  
  GenerateImage: async (params) => {
    console.log('Mock image generation:', params);
    return {
      success: true,
      imageUrl: 'https://mock-image.example.com/generated-image.png'
    };
  },
  
  ExtractDataFromUploadedFile: async (params) => {
    console.log('Mock data extraction:', params);
    return {
      success: true,
      extractedData: {
        text: "Mock extracted text from document",
        entities: ["Port of Shanghai", "Container Ship", "Trade Route"],
        confidence: 0.85
      }
    };
  }
};

// Individual export aliases for backward compatibility
export const InvokeLLM = Core.InvokeLLM;
export const SendEmail = Core.SendEmail;
export const UploadFile = Core.UploadFile;
export const GenerateImage = Core.GenerateImage;
export const ExtractDataFromUploadedFile = Core.ExtractDataFromUploadedFile;






